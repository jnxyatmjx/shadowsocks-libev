name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    branches: [ "master" ]
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

jobs:
  build:

    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "ubuntu-20.04" ]

    steps:
    # This step references the directory that contains the action.
      #- uses: ./.github/actions/hello-world-action
    # This step checks out a copy of your repository.
    - uses: actions/checkout@v3
    - name: cmake-configure
      run: |
        sudo apt-get install --no-install-recommends gettext build-essential autoconf libtool libpcre3-dev asciidoc xmlto libev-dev libc-ares-dev automake libmbedtls-dev libsodium-dev pkg-config
        git submodule update --init --recursive
        mkdir bld_ 
        cd bld_ && cmake ../
    - name: cmake-make
      run: |
        echo -e "$(nproc) thread compile"
        cd bld_
        make -j$(nproc) || make -j1 || make -j1 V=s
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: ssh commands using password
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: whoami
